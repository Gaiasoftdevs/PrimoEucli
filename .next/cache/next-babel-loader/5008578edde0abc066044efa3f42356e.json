{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { Component } from 'react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport { connect } from 'react-redux';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { addToCart, addQuantityWithNumber } from '../../store/actions/cartActions';\nimport ProductDetailsTab from './ProductDetailsTab';\nimport RelatedProducts from './RelatedProducts';\nimport ProductImage from './ProductImage';\n\nconst hookClass = props => {\n  const router = useRouter();\n  return __jsx(ProductDetailsStyleOne, _extends({}, props, {\n    router: router\n  }));\n};\n\nclass ProductDetailsStyleOne extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      qty: 1,\n      max: 10,\n      min: 1\n    });\n\n    _defineProperty(this, \"handleAddToCart\", () => {\n      let {\n        id\n      } = this.props.router.query;\n      let {\n        qty\n      } = this.state;\n      this.props.addQuantityWithNumber(id, qty);\n      toast.success('Added to the cart', {\n        position: \"bottom-left\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true\n      });\n    });\n\n    _defineProperty(this, \"incrementItem\", () => {\n      this.setState(prevState => {\n        if (prevState.qty < 10) {\n          return {\n            qty: prevState.qty + 1\n          };\n        } else {\n          return null;\n        }\n      });\n    });\n\n    _defineProperty(this, \"decreaseItem\", () => {\n      this.setState(prevState => {\n        if (prevState.qty > 1) {\n          return {\n            qty: prevState.qty - 1\n          };\n        } else {\n          return null;\n        }\n      });\n    });\n  }\n\n  render() {\n    // let { id } = this.props.router.query;\n    let {\n      title,\n      offer,\n      oldPrice,\n      newPrice,\n      imageUrl\n    } = this.props.product; // console.log()\n    // let data = products.filter((product) => product.id == id);\n\n    return __jsx(\"section\", {\n      className: \"product-details-area pt-100 pb-70\"\n    }, __jsx(ToastContainer, null), __jsx(\"div\", {\n      className: \"container\"\n    }, __jsx(\"div\", {\n      className: \"row\"\n    }, __jsx(\"div\", {\n      className: \"col-lg-5 col-md-12\"\n    }, __jsx(ProductImage, {\n      imageUrl: imageUrl\n    })), __jsx(\"div\", {\n      className: \"col-lg-7 col-md-12\"\n    }, __jsx(\"div\", {\n      className: \"products-details-desc\"\n    }, __jsx(\"h3\", null, title), __jsx(\"div\", {\n      className: \"price\"\n    }, offer ? __jsx(React.Fragment, null, __jsx(\"span\", {\n      className: \"old-price\"\n    }, \"$\", oldPrice), __jsx(\"span\", {\n      className: \"new-price\"\n    }, \"$\", newPrice)) : __jsx(\"span\", {\n      className: \"new-price\"\n    }, \"$\", oldPrice)), __jsx(\"div\", {\n      className: \"products-review\"\n    }, __jsx(\"div\", {\n      className: \"rating\"\n    }, __jsx(\"i\", {\n      className: \"bx bx-star\"\n    }), __jsx(\"i\", {\n      className: \"bx bx-star\"\n    }), __jsx(\"i\", {\n      className: \"bx bx-star\"\n    }), __jsx(\"i\", {\n      className: \"bx bx-star\"\n    }), __jsx(\"i\", {\n      className: \"bx bx-star\"\n    })), __jsx(Link, {\n      href: \"#\"\n    }, __jsx(\"a\", {\n      onClick: e => e.preventDefault(),\n      className: \"rating-count\"\n    }, \"3 reviews\"))), __jsx(\"ul\", {\n      className: \"products-info\"\n    }, __jsx(\"li\", null, __jsx(\"span\", null, \"Disponibilidad:\"), \"3 libres\"), __jsx(\"li\", null, __jsx(\"span\", null, \"Tipo:\"), \"Bungalow\"), __jsx(\"li\", null, __jsx(\"span\", null, \"Capacidad de Personas:\"), \"5\")), __jsx(\"br\", null), __jsx(\"div\", {\n      className: \"products-add-to-cart\"\n    }, __jsx(\"div\", {\n      className: \"input-counter\"\n    }, __jsx(\"input\", {\n      type: \"date\"\n    })), __jsx(\"div\", {\n      className: \"input-counter\"\n    }, __jsx(\"input\", {\n      type: \"date\"\n    }))), __jsx(\"br\", null), __jsx(\"ul\", {\n      className: \"products-info\"\n    }, __jsx(\"li\", null, __jsx(\"span\", null, \"D\\xEDas de Estancia: 5\")), __jsx(\"li\", null, __jsx(\"span\", null, \"subtotal:\"), \" 1000\")), __jsx(\"div\", {\n      className: \"products-add-to-cart\"\n    }, __jsx(Link, {\n      href: \"/checkout\"\n    }, __jsx(\"button\", {\n      className: \"default-btn\",\n      onClick: console.log(\"Checkout\")\n    }, __jsx(\"i\", {\n      className: \"fas fa-cart-plus\"\n    }), \"Reservar Ahora\")))))), __jsx(ProductDetailsTab, null)));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addQuantityWithNumber: (id, qty) => {\n      dispatch(addQuantityWithNumber(id, qty));\n    },\n    addToCart: id => {\n      dispatch(addToCart(id));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(hookClass);","map":null,"metadata":{},"sourceType":"module"}