{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { Component } from 'react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport { connect } from 'react-redux';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { addToCart, addQuantityWithNumber } from '../../store/actions/cartActions';\nimport ProductDetailsTab from './ProductDetailsTab';\nimport RelatedProducts from './RelatedProducts';\nimport ProductImage from './ProductImage';\n\nconst hookClass = props => {\n  const router = useRouter();\n  return __jsx(ProductDetailsStyleOne, _extends({}, props, {\n    router: router\n  }));\n};\n\nclass ProductDetailsStyleOne extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      qty: 1,\n      max: 10,\n      min: 1\n    });\n\n    _defineProperty(this, \"handleAddToCart\", () => {\n      let {\n        id\n      } = this.props.router.query;\n      let {\n        qty\n      } = this.state;\n      this.props.addQuantityWithNumber(id, qty);\n      toast.success('Added to the cart', {\n        position: \"bottom-left\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true\n      });\n    });\n\n    _defineProperty(this, \"incrementItem\", () => {\n      this.setState(prevState => {\n        if (prevState.qty < 10) {\n          return {\n            qty: prevState.qty + 1\n          };\n        } else {\n          return null;\n        }\n      });\n    });\n\n    _defineProperty(this, \"decreaseItem\", () => {\n      this.setState(prevState => {\n        if (prevState.qty > 1) {\n          return {\n            qty: prevState.qty - 1\n          };\n        } else {\n          return null;\n        }\n      });\n    });\n  }\n\n  render() {\n    // let { id } = this.props.router.query;\n    let {\n      title,\n      offer,\n      oldPrice,\n      newPrice,\n      imageUrl\n    } = this.props.product; // console.log()\n    // let data = products.filter((product) => product.id == id);\n\n    return __jsx(\"section\", {\n      className: \"product-details-area pt-100 pb-70\"\n    }, __jsx(ToastContainer, null), __jsx(\"div\", {\n      className: \"container\"\n    }, __jsx(\"div\", {\n      className: \"row\"\n    }, __jsx(\"div\", {\n      className: \"col-lg-5 col-md-12\"\n    }, __jsx(ProductImage, {\n      imageUrl: imageUrl\n    })), __jsx(\"div\", {\n      className: \"col-lg-7 col-md-12\"\n    }, __jsx(\"div\", {\n      className: \"products-details-desc\"\n    }, __jsx(\"h3\", null, title), __jsx(\"div\", {\n      className: \"price\"\n    }, offer ? __jsx(React.Fragment, null, __jsx(\"span\", {\n      className: \"old-price\"\n    }, \"$\", oldPrice), __jsx(\"span\", {\n      className: \"new-price\"\n    }, \"$\", newPrice)) : __jsx(\"span\", {\n      className: \"new-price\"\n    }, \"$\", oldPrice)), __jsx(\"div\", {\n      className: \"products-review\"\n    }, __jsx(\"div\", {\n      className: \"rating\"\n    }, __jsx(\"i\", {\n      className: \"bx bx-star\"\n    }), __jsx(\"i\", {\n      className: \"bx bx-star\"\n    }), __jsx(\"i\", {\n      className: \"bx bx-star\"\n    }), __jsx(\"i\", {\n      className: \"bx bx-star\"\n    }), __jsx(\"i\", {\n      className: \"bx bx-star\"\n    })), __jsx(Link, {\n      href: \"#\"\n    }, __jsx(\"a\", {\n      onClick: e => e.preventDefault(),\n      className: \"rating-count\"\n    }, \"3 reviews\"))), __jsx(\"ul\", {\n      className: \"products-info\"\n    }, __jsx(\"li\", null, __jsx(\"span\", null, \"Disponibilidad:\"), __jsx(Link, {\n      href: \"#\"\n    }, __jsx(\"a\", {\n      onClick: e => e.preventDefault()\n    }, \"3 libres\"))), __jsx(\"li\", null, __jsx(\"span\", null, \"Tipo:\"), __jsx(Link, {\n      href: \"#\"\n    }, __jsx(\"a\", {\n      onClick: e => e.preventDefault()\n    }, \"Bungalow\")))), __jsx(\"div\", {\n      className: \"products-add-to-cart\"\n    }), __jsx(\"div\", {\n      className: \"products-add-to-cart\"\n    }, __jsx(\"div\", {\n      className: \"input-counter\"\n    }, __jsx(\"input\", {\n      type: \"date\"\n    })), __jsx(\"button\", {\n      className: \"default-btn\",\n      onClick: this.handleAddToCart\n    }, __jsx(\"i\", {\n      className: \"fas fa-cart-plus\"\n    }), \"Reservar Ahora\"))))), __jsx(ProductDetailsTab, null)), __jsx(RelatedProducts, null));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addQuantityWithNumber: (id, qty) => {\n      dispatch(addQuantityWithNumber(id, qty));\n    },\n    addToCart: id => {\n      dispatch(addToCart(id));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(hookClass);","map":{"version":3,"sources":["D:/chavita ending/livani-react-next-ecommerce-template/livani-react/components/ProductDetails/ProductDetailsStyleOne.js"],"names":["React","Component","Link","useRouter","connect","ToastContainer","toast","addToCart","addQuantityWithNumber","ProductDetailsTab","RelatedProducts","ProductImage","hookClass","props","router","ProductDetailsStyleOne","qty","max","min","id","query","state","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","setState","prevState","render","title","offer","oldPrice","newPrice","imageUrl","product","e","preventDefault","handleAddToCart","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport { connect } from 'react-redux';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { addToCart, addQuantityWithNumber } from '../../store/actions/cartActions';\nimport ProductDetailsTab from './ProductDetailsTab';\nimport RelatedProducts from './RelatedProducts';\nimport ProductImage from './ProductImage';\n\nconst hookClass = (props) => {\n    const router = useRouter();\n    return <ProductDetailsStyleOne {...props} router={router} />\n}\n\nclass ProductDetailsStyleOne extends Component {\n    state = {\n        qty: 1,\n        max: 10,\n        min: 1\n    };\n\n    handleAddToCart = () => {\n        let { id } = this.props.router.query;\n        let { qty } = this.state;\n        this.props.addQuantityWithNumber(id, qty);  \n\n        toast.success('Added to the cart', {\n            position: \"bottom-left\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true\n        });\n    }\n\n    incrementItem = () => {\n        this.setState(prevState => {\n            if(prevState.qty < 10) {\n                return {\n                    qty: prevState.qty + 1\n                }\n            } else {\n                return null;\n            }\n        });\n    }\n\n    decreaseItem = () => {\n        this.setState(prevState => {\n            if(prevState.qty > 1) {\n                return {\n                    qty: prevState.qty - 1\n                }\n            } else {\n                return null;\n            }\n        });\n    }\n\n    render() {\n        // let { id } = this.props.router.query;\n        let { title, offer, oldPrice, newPrice, imageUrl } = this.props.product;\n        // console.log()\n        // let data = products.filter((product) => product.id == id);\n        return (\n            <section className=\"product-details-area pt-100 pb-70\">\n                <ToastContainer />\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-lg-5 col-md-12\">\n                            <ProductImage imageUrl={imageUrl} />\n                        </div>\n\n                        <div className=\"col-lg-7 col-md-12\">\n                            <div className=\"products-details-desc\">\n                                <h3>{title}</h3>\n\n                                <div className=\"price\">\n                                {\n                                    offer ? (\n                                        <React.Fragment>\n                                            <span className=\"old-price\">${oldPrice}</span>\n                                            <span className=\"new-price\">${newPrice}</span>\n                                        </React.Fragment>\n                                    ) : (\n                                        <span className=\"new-price\">${oldPrice}</span>\n                                    )\n                                }\n                                </div>\n\n                                <div className=\"products-review\">\n                                    <div className=\"rating\">\n                                        <i className='bx bx-star'></i>\n                                        <i className='bx bx-star'></i>\n                                        <i className='bx bx-star'></i>\n                                        <i className='bx bx-star'></i>\n                                        <i className='bx bx-star'></i>\n                                    </div>\n\n                                    <Link href=\"#\">\n                                        <a onClick={e => e.preventDefault()} className=\"rating-count\">3 reviews</a>\n                                    </Link>\n                                </div>\n\n                                <ul className=\"products-info\">\n                                    \n                                    <li>\n                                        <span>Disponibilidad:</span> \n                                        <Link href=\"#\">\n                                            <a onClick={e => e.preventDefault()}>3 libres</a>\n                                        </Link>\n                                    </li>\n                                    <li>\n                                        <span>Tipo:</span> \n                                        <Link href=\"#\">\n                                            <a onClick={e => e.preventDefault()}>Bungalow</a>\n                                        </Link>\n                                    </li>\n                                </ul>\n\n\n                                <div className=\"products-add-to-cart\"></div>\n                                <div className=\"products-add-to-cart\">\n                                    <div className=\"input-counter\">\n                                        \n\n                                        <input \n                                            type=\"date\" \n                                           \n                                        />\n\n                                        \n                                            \n                                    </div>\n\n                                    <button \n                                        className=\"default-btn\"\n                                        onClick={this.handleAddToCart}\n                                    >\n                                        <i className=\"fas fa-cart-plus\"></i> \n                                        Reservar Ahora\n                                    </button>\n                                </div>\n\n                                \n                           \n                            </div>\n                        </div>\n                    </div>\n\n                    {/* Product Details Tab */}\n                    <ProductDetailsTab />\n                </div>\n\n                {/* Related Products */}\n                <RelatedProducts />\n            </section>\n        );\n    }\n}\n\nconst mapDispatchToProps= (dispatch)=>{\n    return {\n        addQuantityWithNumber: (id, qty) => {dispatch(addQuantityWithNumber(id, qty))},\n        addToCart: (id) => { dispatch(addToCart(id)) }\n    }\n}\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(hookClass);"]},"metadata":{},"sourceType":"module"}