{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Link from '../../utils/ActiveLink';\nimport SearchModal from '../Modals/SearchModal';\nimport ShoppingCartModal from '../Modals/ShoppingCartModal';\nimport SidebarModal from '../Modals/SidebarModal';\n\nclass Navbar extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"_isMounted\", false);\n\n    _defineProperty(this, \"state\", {\n      display: false,\n      collapsed: true\n    });\n\n    _defineProperty(this, \"toggleNavbar\", () => {\n      this.setState({\n        collapsed: !this.state.collapsed\n      });\n    });\n\n    _defineProperty(this, \"toggleModalSearch\", () => {\n      this.setState({\n        SearchModal: !this.state.SearchModal\n      });\n    });\n\n    _defineProperty(this, \"toggleModalCart\", () => {\n      this.setState({\n        ShoppingCartModal: !this.state.ShoppingCartModal\n      });\n    });\n\n    _defineProperty(this, \"toggleModalSidebar\", () => {\n      this.setState({\n        SidebarModal: !this.state.SidebarModal\n      });\n    });\n  }\n\n  componentDidMount() {\n    let elementId = document.getElementById(\"navbar\");\n    document.addEventListener(\"scroll\", () => {\n      if (window.scrollY > 170) {\n        elementId.classList.add(\"is-sticky\");\n      } else {\n        elementId.classList.remove(\"is-sticky\");\n      }\n    });\n    window.scrollTo(0, 0);\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  } // Search Modal\n\n\n  render() {\n    const {\n      products\n    } = this.props;\n    const {\n      collapsed\n    } = this.state;\n    const classNameOne = collapsed ? 'collapse navbar-collapse' : 'collapse navbar-collapse show';\n    const classNameTwo = collapsed ? 'navbar-toggler navbar-toggler-right collapsed' : 'navbar-toggler navbar-toggler-right';\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      id: \"navbar\",\n      className: \"navbar-area\"\n    }, __jsx(\"div\", {\n      className: \"main-nav\"\n    }, __jsx(\"div\", {\n      className: \"container\"\n    }, __jsx(\"nav\", {\n      className: \"navbar navbar-expand-md navbar-light\"\n    }, __jsx(Link, {\n      href: \"/\"\n    }, __jsx(\"a\", {\n      className: \"navbar-brand\"\n    }, __jsx(\"h2\", null, \"-Salvador's hotel\"))), __jsx(\"button\", {\n      onClick: this.toggleNavbar,\n      className: classNameTwo,\n      type: \"button\",\n      \"data-toggle\": \"collapse\",\n      \"data-target\": \"#navbarSupportedContent\",\n      \"aria-controls\": \"navbarSupportedContent\",\n      \"aria-expanded\": \"false\",\n      \"aria-label\": \"Toggle navigation\"\n    }, __jsx(\"span\", {\n      className: \"icon-bar top-bar\"\n    }), __jsx(\"span\", {\n      className: \"icon-bar middle-bar\"\n    }), __jsx(\"span\", {\n      className: \"icon-bar bottom-bar\"\n    })), __jsx(\"div\", {\n      className: classNameOne,\n      id: \"navbarSupportedContent\"\n    }, __jsx(\"ul\", {\n      className: \"navbar-nav\"\n    }, __jsx(\"li\", {\n      className: \"nav-item\"\n    }, __jsx(Link, {\n      href: \"/\"\n    }, __jsx(\"a\", {\n      className: \"nav-link\"\n    }, \"Home\"))), __jsx(\"li\", {\n      className: \"nav-item megamenu\"\n    }, __jsx(Link, {\n      href: \"/hospedaje\"\n    }, __jsx(\"a\", {\n      className: \"nav-link\"\n    }, \"Hospedajes\"))), __jsx(\"li\", {\n      className: \"nav-item megamenu\"\n    }, __jsx(Link, {\n      href: \"/contact\"\n    }, __jsx(\"a\", {\n      className: \"nav-link\"\n    }, \"Contact US\"))), __jsx(\"li\", {\n      className: \"nav-item megamenu\"\n    }, __jsx(Link, {\n      href: \"/contact\"\n    }, __jsx(\"a\", {\n      className: \"nav-link\"\n    }, \"Rastrear Reservaci\\xF3n\")))), __jsx(\"div\", {\n      className: \"others-option\"\n    }, __jsx(\"div\", {\n      className: \"option-item\"\n    }, __jsx(\"div\", {\n      className: \"search-btn-box\",\n      onClick: this.toggleModalSearch\n    }, __jsx(\"i\", {\n      className: \"search-btn bx bx-search-alt\"\n    }))), __jsx(\"div\", {\n      className: \"option-item\"\n    }, __jsx(\"div\", {\n      className: \"burger-menu\",\n      onClick: this.toggleModalSidebar\n    }, __jsx(\"span\", {\n      className: \"top-bar\"\n    }), __jsx(\"span\", {\n      className: \"middle-bar\"\n    }), __jsx(\"span\", {\n      className: \"bottom-bar\"\n    }))))))))), __jsx(SearchModal, {\n      onClick: this.toggleModalSearch,\n      active: this.state.SearchModal ? 'active' : ''\n    }), __jsx(SidebarModal, {\n      onClick: this.toggleModalSidebar,\n      active: this.state.SidebarModal ? 'active' : ''\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    products: state.addedItems\n  };\n};\n\nexport default connect(mapStateToProps)(Navbar);","map":{"version":3,"sources":["D:/chavita ending/livani-react-next-ecommerce-template/livani-react/components/Layouts/Navbar.js"],"names":["React","Component","connect","Link","SearchModal","ShoppingCartModal","SidebarModal","Navbar","display","collapsed","setState","state","componentDidMount","elementId","document","getElementById","addEventListener","window","scrollY","classList","add","remove","scrollTo","componentWillUnmount","_isMounted","render","products","props","classNameOne","classNameTwo","toggleNavbar","toggleModalSearch","toggleModalSidebar","mapStateToProps","addedItems"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Link from '../../utils/ActiveLink';\nimport SearchModal from '../Modals/SearchModal';\nimport ShoppingCartModal from '../Modals/ShoppingCartModal';\nimport SidebarModal from '../Modals/SidebarModal';\n\nclass Navbar extends Component {\n    // Navbar \n    _isMounted = false;\n    state = {\n        display: false,\n        collapsed: true\n    };\n    toggleNavbar = () => {\n        this.setState({\n            collapsed: !this.state.collapsed,\n        });\n    }\n    componentDidMount() {\n        let elementId = document.getElementById(\"navbar\");\n        document.addEventListener(\"scroll\", () => {\n            if (window.scrollY > 170) {\n                elementId.classList.add(\"is-sticky\");\n            } else {\n                elementId.classList.remove(\"is-sticky\");\n            }\n        });\n        window.scrollTo(0, 0);\n    }\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n    // Search Modal\n    toggleModalSearch = () => {\n        this.setState({\n            SearchModal: !this.state.SearchModal\n        });\n    }\n    \n    // Shopping Cart Modal\n    toggleModalCart = () => {\n        this.setState({\n            ShoppingCartModal: !this.state.ShoppingCartModal\n        });\n    }\n\n    // Sidebar Modal\n    toggleModalSidebar = () => {\n        this.setState({\n            SidebarModal: !this.state.SidebarModal\n        });\n    }\n \n    render() {\n\n        const { products } = this.props;\n        const { collapsed } = this.state;\n        const classNameOne = collapsed ? 'collapse navbar-collapse' : 'collapse navbar-collapse show';\n        const classNameTwo = collapsed ? 'navbar-toggler navbar-toggler-right collapsed' : 'navbar-toggler navbar-toggler-right';\n\n        return (\n            <React.Fragment>\n                <div id=\"navbar\" className=\"navbar-area\">\n                    <div className=\"main-nav\">\n                        <div className=\"container\">\n                            <nav className=\"navbar navbar-expand-md navbar-light\">\n                                <Link href=\"/\">\n                                    <a className=\"navbar-brand\">\n                                    <h2>-Salvador's hotel</h2>\n                                    </a>\n                                </Link>\n\n                                <button \n                                    onClick={this.toggleNavbar} \n                                    className={classNameTwo}\n                                    type=\"button\" \n                                    data-toggle=\"collapse\" \n                                    data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" \n                                    aria-expanded=\"false\" \n                                    aria-label=\"Toggle navigation\"\n                                >\n                                    <span className=\"icon-bar top-bar\"></span>\n                                    <span className=\"icon-bar middle-bar\"></span>\n                                    <span className=\"icon-bar bottom-bar\"></span>\n                                </button>\n\n                                <div className={classNameOne} id=\"navbarSupportedContent\">\n                                    <ul className=\"navbar-nav\">\n                                        <li className=\"nav-item\">\n                                        <Link href=\"/\">\n                                                <a className=\"nav-link\">\n                                                    Home \n                                                </a>\n                                            </Link>\n\n                                            \n                                        </li>\n\n                                        <li className=\"nav-item megamenu\">\n                                            <Link href=\"/hospedaje\">\n                                                <a className=\"nav-link\">\n                                                    Hospedajes \n                                                </a>\n                                            </Link>\n\n                                            \n                                        </li>\n\n                                        <li className=\"nav-item megamenu\">\n                                            <Link href=\"/contact\">\n                                                <a className=\"nav-link\">\n                                                   Contact US \n                                                </a>\n                                            </Link>\n\n                                          \n                                        </li>\n                                        <li className=\"nav-item megamenu\">\n                                            <Link href=\"/contact\">\n                                                <a className=\"nav-link\">\n                                                   Rastrear Reservación \n                                                </a>\n                                            </Link>\n\n                                          \n                                        </li>\n\n                                    </ul>\n\n                                    <div className=\"others-option\">\n                                        <div className=\"option-item\">\n                                            <div className=\"search-btn-box\" onClick={this.toggleModalSearch}>\n                                                <i className=\"search-btn bx bx-search-alt\"></i>\n                                            </div>\n                                        </div>\n\n                                      \n                                        <div className=\"option-item\">\n                                            <div className=\"burger-menu\" onClick={this.toggleModalSidebar}>\n                                                <span className=\"top-bar\"></span>\n                                                <span className=\"middle-bar\"></span>\n                                                <span className=\"bottom-bar\"></span>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </nav>\n                        </div>\n                    </div>\n                </div>\n                \n                {/* Search Modal */}\n                <SearchModal \n                    onClick={this.toggleModalSearch} \n                    active={this.state.SearchModal ? 'active' : ''} \n                />\n\n                {/* Shopping Cart Modal */}\n               \n\n                {/* Sidebar Modal */}\n                <SidebarModal \n                    onClick={this.toggleModalSidebar} \n                    active={this.state.SidebarModal ? 'active' : ''} \n                />\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state)=>{\n    return{\n        products: state.addedItems\n    }\n}\n\nexport default connect(mapStateToProps)(Navbar);"]},"metadata":{},"sourceType":"module"}